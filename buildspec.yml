version: 0.2

env:
  variables:
    IMAGE_REPO_NAME: "order"
    _PROJECT_NAME: "admin14-order"

phases:
  install:
    runtime-versions:
      java: openjdk8
      docker: 18
    commands:
      - echo install kubectl
      - curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
      - chmod +x ./kubectl
      - mv ./kubectl /usr/local/bin/kubectl
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - echo $_PROJECT_NAME
      - echo $AWS_ACCOUNT_ID
      - echo $AWS_DEFAULT_REGION
      - echo $CODEBUILD_RESOLVED_SOURCE_VERSION
      - echo start command
      - $(aws ecr get-login --no-include-email --region $AWS_DEFAULT_REGION)
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - mvn package -Dmaven.test.skip=true
      - docker build -t $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$_PROJECT_NAME:$CODEBUILD_RESOLVED_SOURCE_VERSION  .
  post_build:
    commands:
      - echo Pushing the Docker image...
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$_PROJECT_NAME:$CODEBUILD_RESOLVED_SOURCE_VERSION
      - echo connect kubectl
      - kubectl config set-cluster k8s --server="$KUBE_URL" --insecure-skip-tls-verify=true
      - kubectl config set-credentials admin --token="$KUBE_TOKEN"
      - kubectl config set-context default --cluster=k8s --user=admin
      - kubectl config use-context default
      - |
          cat <<EOF | kubectl apply -f -
          apiVersion: v1
          kind: Service
          metadata:
            name: $IMAGE_REPO_NAME
            namespace: teamc
            labels:
              app: $IMAGE_REPO_NAME
          spec:
            ports:
              - port: 8080
                targetPort: 8080
            selector:
              app: $IMAGE_REPO_NAME
          EOF
      - |
          cat  <<EOF | kubectl apply -f -
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: $IMAGE_REPO_NAME
            namespace: teamc
            labels:
              app: $IMAGE_REPO_NAME
          spec:
            replicas: 1
            selector:
              matchLabels:
                app: $IMAGE_REPO_NAME
            template:
              metadata:
                labels:
                  app: $IMAGE_REPO_NAME
              spec:
                containers:
                  - name: $IMAGE_REPO_NAME
                    image: $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$_PROJECT_NAME:$CODEBUILD_RESOLVED_SOURCE_VERSION
                    ports:
                      - containerPort: 8080
                    resources:
                      limits:
                        cpu: 500m
                      requests:
                        cpu: 200m
                    volumeMounts:
                      - mountPath: "/mnt/aws"
                        name: volume                    
                    readinessProbe:
                      tcpSocket:
                        port: 8080
                      initialDelaySeconds: 15
                      periodSeconds: 20
                    livenessProbe:
                      tcpSocket:
                        port: 8080
                      initialDelaySeconds: 20
                      periodSeconds: 30    
                volumes:
                  - name: volume
                    persistentVolumeClaim:
                      claimName: aws-efs  
          EOF
      - |
          cat <<EOF | kubectl apply -f -
          apiVersion: autoscaling/v1
          kind: HorizontalPodAutoscaler
          metadata:
            name: skcchpa-order
            namespace: teamc
          spec:
            scaleTargetRef:
              apiVersion: apps/v1
              kind: Deployment
              name: $IMAGE_REPO_NAME
            minReplicas: 1
            maxReplicas: 3
            targetCPUUtilizationPercentage: 50
            #metrics:
            #- type: Resource
            #  resource:
            #    name: cpu
            #    target:
            #      type: Utilization
            #      averageUtilization: 10
          EOF
      - |  
          cat <<EOF | kubectl apply -f -
          apiVersion: networking.istio.io/v1alpha3
          kind: DestinationRule
          metadata:
            name: dr-order
            namespace: teamc
          spec:
            host: $IMAGE_REPO_NAME
            trafficPolicy:
              connectionPool:
                http:
                  http1MaxPendingRequests: 1
                  maxRequestsPerConnection: 1
              outlierDetection:
                interval: 1s
                consecutiveErrors: 1
                baseEjectionTime: 10m
                maxEjectionPercent: 100
          EOF
cache:
  paths:
    - '/root/.m2/**/*'
